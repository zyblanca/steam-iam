<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.crc.crcloud.steam.iam.dao.IamUserMapper">


    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.crc.crcloud.steam.iam.entity.IamUser">
        <id column="id" property="id"/>
        <result column="login_name" property="loginName"/>
        <result column="email" property="email"/>
        <result column="current_organization_id" property="currentOrganizationId"/>
        <result column="hash_password" property="hashPassword"/>
        <result column="real_name" property="realName"/>
        <result column="phone" property="phone"/>
        <result column="international_tel_code" property="internationalTelCode"/>
        <result column="image_url" property="imageUrl"/>
        <result column="profile_photo" property="profilePhoto"/>
        <result column="language" property="language"/>
        <result column="time_zone" property="timeZone"/>
        <result column="last_password_updated_at" property="lastPasswordUpdatedAt"/>
        <result column="last_login_at" property="lastLoginAt"/>
        <result column="is_enabled" property="isEnabled"/>
        <result column="is_locked" property="isLocked"/>
        <result column="is_ldap" property="isLdap"/>
        <result column="is_admin" property="isAdmin"/>
        <result column="locked_until_at" property="lockedUntilAt"/>
        <result column="password_attempt" property="passwordAttempt"/>
        <result column="object_version_number" property="objectVersionNumber"/>
        <result column="created_by" property="createdBy"/>
        <result column="creation_date" property="creationDate"/>
        <result column="last_updated_by" property="lastUpdatedBy"/>
        <result column="last_update_date" property="lastUpdateDate"/>
    </resultMap>


    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id,
                     login_name,
                     email,
                     current_organization_id,
                     hash_password,
                     real_name,
                     phone,
                     international_tel_code,
                     image_url,
                     profile_photo,
                     language,
                     time_zone,
                     last_password_updated_at,
                     last_login_at,
                     is_enabled,
                     is_locked,
                     is_ldap,
                     is_admin,
                     locked_until_at,
                     password_attempt,
                     object_version_number,
                     created_by,
                     creation_date,
                     last_updated_by,
                     last_update_date
    </sql>
    <update id="fillHashPassword">
        update iam_user
        set hash_password            = #{hashPassword},
            last_password_updated_at = now()
        where id = ${userId}
    </update>
    <select id="getHashPassword" resultType="java.lang.String">
        select hash_password
        from iam_user
        where id = ${userId}
    </select>
    <select id="pageQueryOrganizationUser" resultMap="BaseResultMap">
        <!--<bind name="userMemberType" value="@com.crc.crcloud.steam.iam.common.enums.MemberType@USER.getValue()"/>-->
        select
               iam_user.*
        from iam_user iam_user inner join iam_member_role imr
        on iam_user.id = imr.member_id and imr.member_type = 'user' and imr.source_type = 'organization'
        WHERE
             imr.source_id in
        <foreach collection="organizationIds" item="organizationId" open="(" close=")" separator=",">
            ${organizationId}
        </foreach>
        <if test="@cn.hutool.core.collection.CollUtil@isNotEmpty(searchDTO.roleIds)">
            and imr.role_id in
            <foreach collection="searchDTO.roleIds" item="roleId" open="(" close=")" separator=",">
                ${roleId}
            </foreach>
        </if>
        <if test="@cn.hutool.core.util.StrUtil@isNotEmpty(searchDTO.loginName)">
            and iam_user.login_name like concat('%',#{searchDTO.loginName},'%')
        </if>
        <if test="@cn.hutool.core.util.StrUtil@isNotEmpty(searchDTO.realName)">
            and iam_user.real_name like concat('%',#{searchDTO.realName},'%')
        </if>
        <if test="searchDTO.isLdap!=null">
            and iam_user.is_ldap = ${searchDTO.isLdap}
        </if>
        group by iam_user.id
    </select>
    <select id="pageByProject" resultType="com.crc.crcloud.steam.iam.model.dto.IamUserDTO">
        SELECT
        iu.id,
        iu.login_name,
        iu.real_name,
        iu.email,
        mr1.roleName,
        mr1.creation_date
        FROM
        (SELECT DISTINCT member_id FROM iam_member_role
        WHERE source_id = #{userSearch.projectId}
        AND member_type =#{userSearch.memberType}
        AND source_type = #{userSearch.memberSourceType}
        <if test="userSearch.roleIds !=null and userSearch.roleIds.size()>0">
            AND role_id IN <foreach collection="userSearch.roleIds" separator="," open="(" item="item" close=")">#{item}</foreach>
        </if>
        ) mr
        LEFT JOIN (SELECT imr.member_id,GROUP_CONCAT(ir.NAME ORDER BY ir.ID DESC) roleName,MAX(imr.creation_date)creation_date
        FROM iam_member_role imr
        LEFT JOIN iam_role ir ON ir.ID=imr.ROLE_ID
        WHERE imr.member_type = #{userSearch.memberType}
        AND imr.source_type = #{userSearch.memberSourceType}
        AND imr.source_id =#{userSearch.projectId}
        AND ir.IS_ENABLED =1
        GROUP BY imr.MEMBER_ID) mr1 ON mr1.member_id = mr.member_id
        LEFT JOIN iam_user iu
        ON mr1.member_id = iu.id
        WHERE 1=1
        AND iu.is_enabled =1
        <if test="userSearch.id != null">
            AND iu.id = #{userId}
        </if>
        <if test="userSearch.realName != null and userSearch.realName != '' ">

          and  iu.real_name like concat('%',concat(#{userSearch.realName},'%'))
        </if>
        <if test="userSearch.email != null">
            AND iu.email LIKE concat(concat('%',#{userSearch.email}),'%')
        </if>
        <if test="userSearch.loginName != null and userSearch.loginName != '' ">
         and   iu.login_name like concat('%',concat(#{userSearch.loginName},'%'))
        </if>
        <if test="userSearch.param != null">
            AND (
            id.login_name LIKE concat(concat('%',#{userSearch.param}),'%') OR
            id.real_name LIKE concat(concat('%',#{userSearch.param}),'%')
            )
        </if>

    </select>
    <select id="projectDropDownUser" resultMap="BaseResultMap">
        SELECT
        iu.id,
        iu.login_name,
        iu.real_name
        FROM (select DISTINCT imr.member_id
        FROM iam_member_role imr
        WHERE imr.member_type = #{userSearch.memberType}
        AND imr.source_type = #{userSearch.memberSourceType}
        AND imr.source_id = #{userSearch.projectId})tmp
        INNER JOIN iam_user iu
        ON tmp.member_id = iu.id
        where 1=1
        and iu.is_enabled =1
        <if test="userSearch.realName != null and userSearch.realName != '' ">

         and   iu.real_name like concat('%',concat(#{userSearch.realName},'%'))
        </if>
        <if test="userSearch.loginName != null and userSearch.loginName != '' ">
        and    iu.login_name like concat('%',concat(#{userSearch.loginName},'%'))
        </if>

        order by CONVERT(real_name USING gbk)
    </select>
    <select id="projectUnselectUser" resultMap="BaseResultMap">
        SELECT iu.id,
               iu.login_name,
               iu.real_name
        FROM (SELECT DISTINCT user_id FROM  iam_user_organization_rel WHERE organization_id=#{userSearch.organizationId}) iuor
                 INNER JOIN iam_user iu
                            ON iu.id = iuor.user_id
                 LEFT JOIN (SELECT DISTINCT imr.member_id
                            FROM iam_member_role imr
                            WHERE imr.member_type =#{userSearch.memberType}
                              AND imr.source_type =#{userSearch.memberSourceType}
                              AND imr.source_id = #{userSearch.projectId}) tmp
                           ON tmp.member_id = iu.id
        WHERE  tmp.member_id IS NULL
          AND iu.is_enabled =1
        order by CONVERT(real_name USING gbk);

    </select>
    <select id="selectUserMatchLdapByLoginName"
            resultType="com.crc.crcloud.steam.iam.model.dto.UserMatchLdapDTO">
        SELECT iu.id,iu.login_name,iu.is_ldap,GROUP_CONCAT(iuor.organization_id) as organizationIds
        FROM iam_user iu
        LEFT JOIN iam_user_organization_rel iuor
        ON iuor.user_id=iu.id
        WHERE iu.login_name IN
        <foreach collection="loginNames" separator="," open="(" item="item" close=")">#{item}</foreach>
        GROUP BY iu.id,iu.login_name,iu.is_ldap


    </select>
    <select id="selectEmailUserByEmail" resultType="com.crc.crcloud.steam.iam.model.dto.UserMatchLdapDTO">
        SELECT iu.login_name,iu.email FROM iam_user iu
        WHERE iu.email IN
        <foreach collection="emails" close=")" item="item" open="(" separator=",">#{item}</foreach>
    </select>
        <select id="selectCountUsers" resultType="int">
            SELECT count(1)
            FROM (
            SELECT DISTINCT iu.id FROM iam_user iu
            LEFT JOIN iam_member_role imr on imr.member_id = iu.id
            LEFT JOIN iam_role ir on ir.id = imr.role_id
            WHERE imr.member_type = 'user'
            AND imr.source_id = #{sourceId}
            AND imr.source_type = #{sourceType}
            <if test="roleAssignmentSearchDTO != null">
                <if test="roleAssignmentSearchDTO.loginName != null">
                    AND iu.login_name LIKE concat(concat('%',#{roleAssignmentSearchDTO.loginName}),'%')
                </if>
                <if test="roleAssignmentSearchDTO.realName != null">
                    AND iu.real_name LIKE concat(concat('%',#{roleAssignmentSearchDTO.realName}),'%')
                </if>
                <if test="roleAssignmentSearchDTO.roleName != null">
                    AND ir.name LIKE concat(concat('%',#{roleAssignmentSearchDTO.roleName}),'%')
                </if>
            </if>
            ) t
    </select>
    <select id="selectUserByOption" resultMap="BaseResultMap">
            SELECT
                    iu.id,
                    iu.login_name,
                    iu.email,
                    iu.real_name,
                    iu.is_enabled
            FROM (SELECT DISTINCT
                  imr.MEMBER_ID
                FROM iam_member_role imr
                  LEFT JOIN iam_role ir
                    ON ir.id = imr.role_id
                WHERE imr.member_type = 'user'
                AND imr.source_id = #{sourceId}
                AND imr.source_type = #{sourceType}
                <if test="roleAssignmentSearchDTO != null and roleAssignmentSearchDTO.roleName != null">
                    AND ir.name LIKE concat(concat('%',#{roleAssignmentSearchDTO.roleName}),'%')
                </if>
                ) temp
               LEFT JOIN iam_user iu
                ON temp.member_id = iu.id
        <if test="roleAssignmentSearchDTO != null">
            <if test="roleAssignmentSearchDTO.loginName != null">
                AND iu.login_name LIKE concat(concat('%',#{roleAssignmentSearchDTO.loginName}),'%')
            </if>
            <if test="roleAssignmentSearchDTO.realName != null">
                AND iu.real_name LIKE concat(concat('%',#{roleAssignmentSearchDTO.realName}),'%')
            </if>
        </if>
    </select>
    <select id="selectUserWithRolesByOption" resultType="com.crc.crcloud.steam.iam.model.dto.IamRoleDTO">
                SELECT
                role.id ,
                role.name,
                role.code,
                role.is_enabled,
                role.is_built_in,
                imr.member_id AS user_id
                FROM iam_member_role imr
                LEFT JOIN iam_role role ON imr.role_id = role.id
                WHERE imr.member_type = 'user'
                AND imr.source_id = #{sourceId}
                AND imr.source_type = #{sourceType}
                AND imr.member_id IN <foreach collection="userIds" close=")" item="item" open="(" separator=",">#{item}</foreach>
    </select>
    <select id="selectAllIds" resultType="java.lang.Long">
        SELECT id from iam_user where is_enabled = 1
    </select>
    <select id="pagingQueryUsers" resultMap="BaseResultMap">

        SELECT * FROM iam_user WHERE 1 = 1

        <if test="user.realName != null">
            AND real_name LIKE concat(concat('%',#{user.realName}),'%')
        </if>

    </select>
    <select id="listByProject" resultMap="BaseResultMap">
        SELECT
        iu.id,
        iu.login_name,
        iu.real_name,
        iu.email
        FROM (select DISTINCT imr.member_id
        FROM iam_member_role imr
        WHERE imr.member_type = #{userSearch.memberType}
        AND imr.source_type = #{userSearch.memberSourceType}
        AND imr.source_id = #{userSearch.projectId}
        <if test="userSearch.roleIds !=null and userSearch.roleIds.size()>0">
            and imr.role_id in <foreach collection="userSearch.roleIds" separator="," open="(" item="item" close=")"/>
        </if>
        )tmp
        INNER JOIN iam_user iu
        ON tmp.member_id = iu.id
        where 1=1
        and iu.is_enabled =1
        <if test="userSearch.id != null">
            AND iu.id = #{userId}
        </if>
        <if test="userSearch.realName != null and userSearch.realName != '' ">

            and  iu.real_name like concat('%',concat(#{userSearch.realName},'%'))
        </if>
        <if test="userSearch.email != null">
            AND iu.email LIKE concat(concat('%',#{userSearch.email}),'%')
        </if>
        <if test="userSearch.loginName != null and userSearch.loginName != '' ">
            and   iu.login_name like concat('%',concat(#{userSearch.loginName},'%'))
        </if>
        <if test="userSearch.param != null">
            AND (
            id.login_name LIKE concat(concat('%',#{userSearch.param}),'%') OR
            id.real_name LIKE concat(concat('%',#{userSearch.param}),'%')
            )
        </if>
    </select>


    <update id="updateLdapUser">
        update iam_user
        set email           = #{iamUser.email},
            real_name       = #{iamUser.realName},
            phone           = #{iamUser.phone},
            last_update_date=now()
        where id = #{iamUser.id}
    </update>
    <update id="batchUpdateLdapPassword">
        update iam_user
        set hash_password = #{password}
        where id in <foreach collection="userIds" close=")" item="item" open="(" separator=",">#{item}</foreach>
    </update>
</mapper>
